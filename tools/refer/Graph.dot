digraph go_pkg_relation {
    graph [
        rankdir = "LR"
        //splines=polyline
        overlap=false
    ];

    node [
        fontsize = "16"
        shape = "ellipse"
    ];

    edge [
    ];
    "m3game" [
        label = "<head> m3game\l|
            {|{
            }}"
        shape = "record"
    ];
    "meta" [
        label = "<head> meta\l|
            {|{
            }}"
        shape = "record"
    ];
    "metapb" [
        label = "<head> metapb\l|
            {|{
                <descriptor> descriptor\l|
            }}"
        shape = "record"
    ];
    "config" [
        label = "<head> config\l|
            {|{
                <meta> meta\l|
                <log> log\l|
            }}"
        shape = "record"
    ];
    "util" [
        label = "<head> util\l|
            {|{
            }}"
        shape = "record"
    ];
    "plugins" [
        label = "<head> plugins\l|
            {|{
            }}"
        shape = "record"
    ];
    "metric" [
        label = "<head> metric\l|
            {|{
            }}"
        shape = "record"
    ];
    "db" [
        label = "<head> db\l|
            {|{
                <plugin> plugin\l|
                <proto> proto\l|
                <metapb> metapb\l|
                <log> log\l|
            }}"
        shape = "record"
    ];
    "wraper" [
        label = "<head> wraper\l|
            {|{
                <db> db\l|
                <proto> proto\l|
            }}"
        shape = "record"
    ];
    "broker" [
        label = "<head> broker\l|
            {|{
                <plugin> plugin\l|
            }}"
        shape = "record"
    ];
    "log" [
        label = "<head> log\l|
            {|{
            }}"
        shape = "record"
    ];
    "router" [
        label = "<head> router\l|
            {|{
            }}"
        shape = "record"
    ];
    "trace" [
        label = "<head> trace\l|
            {|{
                <rpc> rpc\l|
                <otelgrpc> otelgrpc\l|
                <trace> trace\l|
                <proto> proto\l|
            }}"
        shape = "record"
    ];
    "store" [
        label = "<head> store\l|
            {|{
            }}"
        shape = "record"
    ];
    "shape" [
        label = "<head> shape\l|
            {|{
                <log> log\l|
            }}"
        shape = "record"
    ];
    "gate" [
        label = "<head> gate\l|
            {|{
                <metapb> metapb\l|
                <metadata> metadata\l|
            }}"
        shape = "record"
    ];
    "runtime" [
        label = "<head> runtime\l|
            {|{
                <config> config\l|
                <log> log\l|
                <router> router\l|
                <shape> shape\l|
                <trace> trace\l|
                <app> app\l|
                <mesh> mesh\l|
                <plugin> plugin\l|
                <resource> resource\l|
                <server> server\l|
                <transport> transport\l|
                <util> util\l|
            }}"
        shape = "record"
    ];
    "app" [
        label = "<head> app\l|
            {|{
            }}"
        shape = "record"
    ];
    "resource" [
        label = "<head> resource\l|
            {|{
            }}"
        shape = "record"
    ];
    "server" [
        label = "<head> server\l|
            {|{
                <app> app\l|
            }}"
        shape = "record"
    ];
    "async" [
        label = "<head> async\l|
            {|{
                <runtime> runtime\l|
                <app> app\l|
                <server> server\l|
            }}"
        shape = "record"
    ];
    "actor" [
        label = "<head> actor\l|
            {|{
                <meta> meta\l|
                <runtime> runtime\l|
                <app> app\l|
                <server> server\l|
                <metadata> metadata\l|
                <log> log\l|
            }}"
        shape = "record"
    ];
    "multi" [
        label = "<head> multi\l|
            {|{
                <runtime> runtime\l|
                <app> app\l|
                <server> server\l|
            }}"
        shape = "record"
    ];
    "client" [
        label = "<head> client\l|
            {|{
                <meta> meta\l|
                <runtime> runtime\l|
                <rpc> rpc\l|
                <server> server\l|
                <transport> transport\l|
                <proto> proto\l|
                <broker> broker\l|
                <metadata> metadata\l|
            }}"
        shape = "record"
    ];
    "transport" [
        label = "<head> transport\l|
            {|{
                <config> config\l|
                <metapb> metapb\l|
                <broker> broker\l|
                <log> log\l|
                <metadata> metadata\l|
                <proto> proto\l|
                <meta> meta\l|
            }}"
        shape = "record"
    ];
    "rpc" [
        label = "<head> rpc\l|
            {|{
                <metapb> metapb\l|
                <log> log\l|
                <proto> proto\l|
            }}"
        shape = "record"
    ];
    "mesh" [
        label = "<head> mesh\l|
            {|{
                <meta> meta\l|
                <log> log\l|
                <balancer> balancer\l|
                <metadata> metadata\l|
                <router> router\l|
            }}"
        shape = "record"
    ];
    "plugin" [
        label = "<head> plugin\l|
            {|{
                <log> log\l|
            }}"
        shape = "record"
    ];

    config:meta -> meta:head[color="red"]
    config:log -> log:head[color="green"]
    db:plugin -> plugin:head[color="blue"]
    db:metapb -> metapb:head[color="black"]
    db:log -> log:head[color="blueviolet"]
    wraper:db -> db:head[color="brown"]
    broker:plugin -> plugin:head[color="cadetblue"]
    trace:rpc -> rpc:head[color="chocolate"]
    trace:trace -> trace:head[color="crimson"]
    shape:log -> log:head[color="cyan"]
    gate:metapb -> metapb:head[color="darkgrey"]
    runtime:config -> config:head[color="deeppink"]
    runtime:log -> log:head[color="darkred"]
    runtime:router -> router:head[color="red"]
    runtime:shape -> shape:head[color="green"]
    runtime:trace -> trace:head[color="blue"]
    runtime:app -> app:head[color="black"]
    runtime:mesh -> mesh:head[color="blueviolet"]
    runtime:plugin -> plugin:head[color="brown"]
    runtime:resource -> resource:head[color="cadetblue"]
    runtime:server -> server:head[color="chocolate"]
    runtime:transport -> transport:head[color="crimson"]
    runtime:util -> util:head[color="cyan"]
    server:app -> app:head[color="darkgrey"]
    async:runtime -> runtime:head[color="deeppink"]
    async:app -> app:head[color="darkred"]
    async:server -> server:head[color="red"]
    actor:meta -> meta:head[color="green"]
    actor:runtime -> runtime:head[color="blue"]
    actor:app -> app:head[color="black"]
    actor:server -> server:head[color="blueviolet"]
    actor:log -> log:head[color="brown"]
    multi:runtime -> runtime:head[color="cadetblue"]
    multi:app -> app:head[color="chocolate"]
    multi:server -> server:head[color="crimson"]
    client:meta -> meta:head[color="cyan"]
    client:runtime -> runtime:head[color="darkgrey"]
    client:rpc -> rpc:head[color="deeppink"]
    client:server -> server:head[color="darkred"]
    client:transport -> transport:head[color="red"]
    client:broker -> broker:head[color="green"]
    transport:config -> config:head[color="blue"]
    transport:metapb -> metapb:head[color="black"]
    transport:broker -> broker:head[color="blueviolet"]
    transport:log -> log:head[color="brown"]
    transport:meta -> meta:head[color="cadetblue"]
    rpc:metapb -> metapb:head[color="chocolate"]
    rpc:log -> log:head[color="crimson"]
    mesh:meta -> meta:head[color="cyan"]
    mesh:log -> log:head[color="darkgrey"]
    mesh:router -> router:head[color="deeppink"]
    plugin:log -> log:head[color="darkred"]
}
