syntax = "proto3";

package proto;



option go_package = "proto/pb";

import "pkg.proto";
import "options.proto";


service RoleSer {
    rpc Register(Register.Req) returns (Register.Rsp);
    rpc Login(Login.Req) returns (Login.Rsp);
    rpc ModifyName(ModifyName.Req) returns (ModifyName.Rsp);
    rpc GetName(GetName.Req) returns (GetName.Rsp);
    rpc MoveRole(MoveRole.Req) returns (MoveRole.Rsp);
    rpc PostChannel(PostChannel.Req) returns (PostChannel.Rsp);
    rpc PullChannel(PullChannel.Req) returns (PullChannel.Rsp);
}

message RoleDB {
    option (db_primary_key) = "RoleID";
    string RoleID = 1;
    string Name = 2;
}

message Register {
    option (rpc_option).route_key = "";
    message Req {
        RouteHead RouteHead = 1;
        string Name = 2;
    }
    message Rsp {
        RouteHead RouteHead = 1;
        string RoleID = 2;
    }
}

message Login {
    option (rpc_option).route_key = "RoleID";
    message Req {
        RouteHead RouteHead = 1;
        string RoleID = 2;
    }
    message Rsp {
        RouteHead RouteHead = 1;
        string Name = 2;
        string Tips = 3;
    }
}

message ModifyName {
    option (rpc_option).route_key = "RoleID";
    message Req {
        RouteHead RouteHead = 1;
        string RoleID = 2;
        string NewName = 3;
    }
    message Rsp {
        RouteHead RouteHead = 1;
        string Name = 2;
    }
}

message GetName {
    option (rpc_option).route_key = "RoleID";
    message Req {
        RouteHead RouteHead = 1;
        string RoleID = 2;
    }
    message Rsp {
        RouteHead RouteHead = 1;
        string Name = 2;
    }
}

message MoveRole {
    option (rpc_option).route_key = "RoleID";
    message Req {
        RouteHead RouteHead = 1;
        string RoleID = 2;
        int32 Distance = 3;
    }
    message Rsp {
        RouteHead RouteHead = 1;
        int32 Location = 2;
        string LocateName = 3;
    }
}
message ChannelMsg {
    option (rpc_option).route_key = "RoleID";
    string Name = 1;
    string Content = 2;
}


message PostChannel {
    option (rpc_option).route_key = "RoleID";
    message Req {
        RouteHead RouteHead = 1;
        string RoleID = 2;
        string Content = 3;
    }
    message Rsp {
        RouteHead RouteHead = 1;
    }
}

message PullChannel {
    option (rpc_option).route_key = "RoleID";
    message Req {
        RouteHead RouteHead = 1;
        string RoleID = 2;
    }
    message Rsp {
        RouteHead RouteHead = 1;
        repeated ChannelMsg Msgs = 2;
    }
}