syntax = "proto3";

package proto;

import "options.proto";
import "com.proto";

option go_package = "proto/pb";

service RoleSer {
    rpc RoleLogin(RoleLogin.Req) returns (RoleLogin.Rsp);   // 登陆注册
    rpc RoleGetInfo(RoleGetInfo.Req) returns (RoleGetInfo.Rsp); // 获取详情
    rpc RoleModifyName(RoleModifyName.Req) returns (RoleModifyName.Rsp);    // 改名
    rpc RolePowerUp(RolePowerUp.Req) returns (RolePowerUp.Rsp);    // 战力提升
    rpc RolePostChannel(RolePostChannel.Req) returns (RolePostChannel.Rsp); // 发送广播

    rpc RoleGetClubInfo(RoleGetClubInfo.Req) returns (RoleGetClubInfo.Rsp); // 获取社团信息
    rpc RoleGetClubList(RoleGetClubList.Req) returns (RoleGetClubList.Rsp); // 获取社团列表
    rpc RoleGetClubRoleInfo(RoleGetClubRoleInfo.Req) returns (RoleGetClubRoleInfo.Rsp); // 获取玩家社团信息
    rpc RoleCreateClub(RoleCreateClub.Req) returns (RoleCreateClub.Rsp); // 创建社团
    rpc RoleJoinClub(RoleJoinClub.Req) returns (RoleJoinClub.Rsp); // 加入社团
    rpc RoleExitClub(RoleExitClub.Req) returns (RoleExitClub.Rsp); // 退出社团
    rpc RoleCancelClub(RoleCancelClub.Req) returns (RoleCancelClub.Rsp); // 解散社团
}

service RoleDaemonSer {
    rpc RoleRecvChannel(RoleRecvChannel.Req) returns (RoleRecvChannel.Rsp);  // 接受广播
    rpc RoleKick(RoleKick.Req) returns (RoleKick.Rsp);    // 服务迁移
}

message RoleLogin {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
    }
    message Rsp {
        RoleDB RoleDB = 1;
        ClubRoleDB ClubRoleDB = 2;
    }
}

message RoleGetInfo {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
    }
    message Rsp {
        RoleDB RoleDB = 1;
        ClubRoleDB ClubRoleDB = 2;
    }
}

message RoleModifyName {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
        string NewName = 2;
    }
    message Rsp {
        RoleName RoleName = 1;
    }
}

message RolePowerUp {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
        int32 PowerUp = 2;
    }
    message Rsp {
        RolePower RolePower = 1;
    }
}

message RolePostChannel {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
        string Content = 2;
    }
    message Rsp {
    }
}

message RoleGetClubRoleInfo {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
    }
    message Rsp {
        ClubRoleDB ClubRoleDB = 1;
    }
}

message RoleGetClubList {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
    }
    message Rsp {
        repeated ClubDB ClubDBs = 1;
    }
}

message RoleGetClubInfo {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
        string ClubId = 2;
    }
    message Rsp {
        ClubDB ClubDB = 1;
    }
}

message RoleCreateClub {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
    }
    message Rsp {
        string ClubId = 2;
    }
}

message RoleJoinClub {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
        string ClubId = 2;
    }
    message Rsp {
    }
}

message RoleExitClub {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
        string ClubId = 2;
    }
    message Rsp {
    }
}

message RoleCancelClub {
    option (rpc_option).route_key = "RoleId";
    option (rpc_option).cs = true;
    message Req {
        string RoleId = 1;
        string ClubId = 2;
    }
    message Rsp {
    }
}

message RoleRecvChannel {
    option (rpc_option).route_key = "";
    message Req {
        string RoleId = 1;
        string Content = 2;
    }
    message Rsp {
    }
}

message RoleKick {
    option (rpc_option).route_key = "";
    message Req {
        string RoleId = 1;
    }
    message Rsp {
        bytes Content = 1;
    }
}
