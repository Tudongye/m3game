apiVersion: v1
kind: Service
metadata:
  namespace: m3demo
  name: prometheus
  labels:
    app: prometheus
spec:
  type: ClusterIP
  ports:
    - name: tcp-9090-9090
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app: prometheus
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: m3demo
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      scrape_timeout: 15s
    scrape_configs:
    - job_name: 'consul-prometheus'
      consul_sd_configs:
       - server: 'consul:8500'
         services: ['M3Demo_Metric']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  name: prometheus
  namespace: m3demo
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - image: prom/prometheus:v2.30.2
        name: prometheus
        env:
          - name: JAEGER_AGENT_PORT
            value: "6831"
        args:
        - "--config.file=/etc/prometheus/prometheus.yml" #通过volume挂载prometheus.yml
        - "--storage.tsdb.path=/prometheus"              #通过vlolume挂载目录/prometheus
        - "--storage.tsdb.retention.time=24h"
        - "--web.enable-lifecycle"                       #支持热更新，直接执行localhost:9090/-/reload立即生效
        ports:
        - containerPort: 9090
          name: http
        volumeMounts:
        - mountPath: "/etc/prometheus"
          name: config-volume
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 100m
            memory: 512Mi
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: m3demo
  name: grafana
  labels:
    app: grafana
spec:
  type: ClusterIP
  ports:
    - name: tcp-3000-3000
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: m3demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        env:
          - name: JAEGER_AGENT_PORT
            value: "6831"
        ports:
          - containerPort: 3000
            protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
