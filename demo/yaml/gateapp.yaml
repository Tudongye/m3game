apiVersion: v1
kind: Service
metadata:
  namespace: m3demo
  name: gateapp-out
  labels:
    app: gateapp-out
spec:
  type: NodePort
  ports:
    - name: grpc
      nodePort: 30005
      port: 40003
      protocol: TCP
      targetPort: 40003
  selector:
    app: gateapp
---
apiVersion: v1
kind: Service
metadata:
  namespace: m3demo
  name: gateapp
  labels:
    app: gateapp
spec:
  type: ClusterIP
  ports:
    - name: tcp-40001-40001
      port: 40001
      protocol: TCP
      targetPort: 40001
    - name: tcp-40002-40002
      port: 40002
      protocol: TCP
      targetPort: 40002
    - name: tcp-40003-40003
      port: 40003
      protocol: TCP
      targetPort: 40003
  selector:
    app: gateapp
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  generation: 1
  labels:
    app: gateapp
  name: gateapp
  namespace: m3demo
spec:
  serviceName: ""
  replicas: 1
  selector:
    matchLabels:
      app: gateapp
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gateapp
    spec:
      containers:
        - image: m3demo:latest
          imagePullPolicy: Always
          name: gateapp
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 256Mi
          workingDir: /go/bin/demo/deploy
          volumeMounts:
          - name: log
            mountPath: /var/log/m3demo
          - name: m3demo-conf
            mountPath: /go/bin/demo/deploy/configtemp/
          command: [ "/bin/sh", "-c", "touch /var/log/m3demo/app.log;cp configtemp config -rf;sh start.sh k8s world1 gate $(ENV_M3DEMO_Ins)" ]
          env:
            - name: ENV_M3DEMO_Ins
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ENV_M3DEMO_Transport_Host
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:7.12.0
          args: [
            "-c", "/etc/filebeat.yml",
            "-e",
          ]
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
          - mountPath: /var/log/m3demo
            name: log
          - name: filebeat-conf
            mountPath: /etc/filebeat.yml
            readOnly: true
            subPath: filebeat.yml
      restartPolicy: Always
      volumes:
      - name: log 
        emptyDir: {}
      - name: m3demo-conf
        configMap:
          defaultMode: 0640
          name: m3demo-conf
      - name: filebeat-conf
        configMap:
          defaultMode: 0640
          name: filebeat-config-to-logstash
