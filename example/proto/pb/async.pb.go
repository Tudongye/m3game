// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.2.0
// source: async.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	pb "m3game/proto/pb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChannelMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *ChannelMsg) Reset() {
	*x = ChannelMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMsg) ProtoMessage() {}

func (x *ChannelMsg) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMsg.ProtoReflect.Descriptor instead.
func (*ChannelMsg) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelMsg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type TransChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransChannel) Reset() {
	*x = TransChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransChannel) ProtoMessage() {}

func (x *TransChannel) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransChannel.ProtoReflect.Descriptor instead.
func (*TransChannel) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{1}
}

type SSPullChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SSPullChannel) Reset() {
	*x = SSPullChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSPullChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSPullChannel) ProtoMessage() {}

func (x *SSPullChannel) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSPullChannel.ProtoReflect.Descriptor instead.
func (*SSPullChannel) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{2}
}

type TransChannel_Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteHead *pb.RouteHead `protobuf:"bytes,1,opt,name=RouteHead,proto3" json:"RouteHead,omitempty"`
	Msg       *ChannelMsg   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *TransChannel_Req) Reset() {
	*x = TransChannel_Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransChannel_Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransChannel_Req) ProtoMessage() {}

func (x *TransChannel_Req) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransChannel_Req.ProtoReflect.Descriptor instead.
func (*TransChannel_Req) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TransChannel_Req) GetRouteHead() *pb.RouteHead {
	if x != nil {
		return x.RouteHead
	}
	return nil
}

func (x *TransChannel_Req) GetMsg() *ChannelMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type TransChannel_Rsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteHead *pb.RouteHead `protobuf:"bytes,1,opt,name=RouteHead,proto3" json:"RouteHead,omitempty"`
}

func (x *TransChannel_Rsp) Reset() {
	*x = TransChannel_Rsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransChannel_Rsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransChannel_Rsp) ProtoMessage() {}

func (x *TransChannel_Rsp) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransChannel_Rsp.ProtoReflect.Descriptor instead.
func (*TransChannel_Rsp) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{1, 1}
}

func (x *TransChannel_Rsp) GetRouteHead() *pb.RouteHead {
	if x != nil {
		return x.RouteHead
	}
	return nil
}

type SSPullChannel_Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteHead *pb.RouteHead `protobuf:"bytes,1,opt,name=RouteHead,proto3" json:"RouteHead,omitempty"`
}

func (x *SSPullChannel_Req) Reset() {
	*x = SSPullChannel_Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSPullChannel_Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSPullChannel_Req) ProtoMessage() {}

func (x *SSPullChannel_Req) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSPullChannel_Req.ProtoReflect.Descriptor instead.
func (*SSPullChannel_Req) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SSPullChannel_Req) GetRouteHead() *pb.RouteHead {
	if x != nil {
		return x.RouteHead
	}
	return nil
}

type SSPullChannel_Rsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteHead *pb.RouteHead `protobuf:"bytes,1,opt,name=RouteHead,proto3" json:"RouteHead,omitempty"`
	Msgs      []*ChannelMsg `protobuf:"bytes,2,rep,name=Msgs,proto3" json:"Msgs,omitempty"`
}

func (x *SSPullChannel_Rsp) Reset() {
	*x = SSPullChannel_Rsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_async_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSPullChannel_Rsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSPullChannel_Rsp) ProtoMessage() {}

func (x *SSPullChannel_Rsp) ProtoReflect() protoreflect.Message {
	mi := &file_async_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSPullChannel_Rsp.ProtoReflect.Descriptor instead.
func (*SSPullChannel_Rsp) Descriptor() ([]byte, []int) {
	return file_async_proto_rawDescGZIP(), []int{2, 1}
}

func (x *SSPullChannel_Rsp) GetRouteHead() *pb.RouteHead {
	if x != nil {
		return x.RouteHead
	}
	return nil
}

func (x *SSPullChannel_Rsp) GetMsgs() []*ChannelMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

var File_async_proto protoreflect.FileDescriptor

var file_async_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x70, 0x6b, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a,
	0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x5a, 0x0a, 0x03, 0x52,
	0x65, 0x71, 0x12, 0x2e, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x23, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x73, 0x67, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x1a, 0x35, 0x0a, 0x03, 0x52, 0x73, 0x70, 0x12, 0x2e,
	0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x52, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x3a, 0x06,
	0xca, 0xf3, 0x18, 0x02, 0x0a, 0x00, 0x22, 0xac, 0x01, 0x0a, 0x0d, 0x53, 0x53, 0x50, 0x75, 0x6c,
	0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x35, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x12,
	0x2e, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x52, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x1a,
	0x5c, 0x0a, 0x03, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x09, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x4d, 0x73, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x4d, 0x73, 0x67, 0x73, 0x3a, 0x06, 0xca,
	0xf3, 0x18, 0x02, 0x0a, 0x00, 0x32, 0x91, 0x01, 0x0a, 0x08, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53,
	0x65, 0x72, 0x12, 0x40, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x52, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0d, 0x53, 0x53, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x53,
	0x50, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x53, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x73, 0x70, 0x42, 0x0a, 0x5a, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_async_proto_rawDescOnce sync.Once
	file_async_proto_rawDescData = file_async_proto_rawDesc
)

func file_async_proto_rawDescGZIP() []byte {
	file_async_proto_rawDescOnce.Do(func() {
		file_async_proto_rawDescData = protoimpl.X.CompressGZIP(file_async_proto_rawDescData)
	})
	return file_async_proto_rawDescData
}

var file_async_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_async_proto_goTypes = []interface{}{
	(*ChannelMsg)(nil),        // 0: proto.ChannelMsg
	(*TransChannel)(nil),      // 1: proto.TransChannel
	(*SSPullChannel)(nil),     // 2: proto.SSPullChannel
	(*TransChannel_Req)(nil),  // 3: proto.TransChannel.Req
	(*TransChannel_Rsp)(nil),  // 4: proto.TransChannel.Rsp
	(*SSPullChannel_Req)(nil), // 5: proto.SSPullChannel.Req
	(*SSPullChannel_Rsp)(nil), // 6: proto.SSPullChannel.Rsp
	(*pb.RouteHead)(nil),      // 7: proto.RouteHead
}
var file_async_proto_depIdxs = []int32{
	7, // 0: proto.TransChannel.Req.RouteHead:type_name -> proto.RouteHead
	0, // 1: proto.TransChannel.Req.Msg:type_name -> proto.ChannelMsg
	7, // 2: proto.TransChannel.Rsp.RouteHead:type_name -> proto.RouteHead
	7, // 3: proto.SSPullChannel.Req.RouteHead:type_name -> proto.RouteHead
	7, // 4: proto.SSPullChannel.Rsp.RouteHead:type_name -> proto.RouteHead
	0, // 5: proto.SSPullChannel.Rsp.Msgs:type_name -> proto.ChannelMsg
	3, // 6: proto.AsyncSer.TransChannel:input_type -> proto.TransChannel.Req
	5, // 7: proto.AsyncSer.SSPullChannel:input_type -> proto.SSPullChannel.Req
	4, // 8: proto.AsyncSer.TransChannel:output_type -> proto.TransChannel.Rsp
	6, // 9: proto.AsyncSer.SSPullChannel:output_type -> proto.SSPullChannel.Rsp
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_async_proto_init() }
func file_async_proto_init() {
	if File_async_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_async_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSPullChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransChannel_Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransChannel_Rsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSPullChannel_Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_async_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSPullChannel_Rsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_async_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_async_proto_goTypes,
		DependencyIndexes: file_async_proto_depIdxs,
		MessageInfos:      file_async_proto_msgTypes,
	}.Build()
	File_async_proto = out.File
	file_async_proto_rawDesc = nil
	file_async_proto_goTypes = nil
	file_async_proto_depIdxs = nil
}
