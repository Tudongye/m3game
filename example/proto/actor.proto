syntax = "proto3";

package proto;

import "options.proto";
import "async.proto";

option go_package = "proto/pb";

service ActorSer {
    rpc Login(Login.Req) returns (Login.Rsp);
    rpc GetInfo(GetInfo.Req) returns (GetInfo.Rsp);
    rpc ModifyName(ModifyName.Req) returns (ModifyName.Rsp);
    rpc LvUp(LvUp.Req) returns (LvUp.Rsp);
    rpc PostChannel(PostChannel.Req) returns (PostChannel.Rsp);
    rpc PullChannel(PullChannel.Req) returns (PullChannel.Rsp);
}

service ActorRegSer {
    rpc Register(Register.Req) returns (Register.Rsp);
    rpc Kick(Kick.Req) returns (Kick.Rsp);
}

message ActorDB {
    option (db_primary_key) = "ActorID";
    string ActorID = 1;
    ActorName ActorName = 2;
    ActorInfo ActorInfo = 3;
}

message ActorName {
    string Name = 1;
}

message ActorInfo {
    int32 Level = 1;
}

message Register {
    option (rpc_option).route_key = "";
    option (rpc_option).cs = true;
    message Req {
        string Name = 1;
    }
    message Rsp {
        string ActorID = 1;
    }
}

message Kick {
    option (rpc_option).route_key = "";
    option (rpc_option).cs = true;
    message Req {
        string leaseid = 1;
    }
    message Rsp {
    }
}

message Login {
    option (rpc_option).route_key = "";
    option (rpc_option).cs = true;
    message Req {
        string ActorID = 1;
    }
    message Rsp {
        ActorDB ActorDB = 1;
    }
}

message ModifyName {
    option (rpc_option).route_key = "";
    option (rpc_option).cs = true;
    message Req {
        string ActorID = 1;
        string NewName = 2;
    }
    message Rsp {
        ActorName ActorName = 1;
    }
}

message LvUp {
    option (rpc_option).route_key = "";
    option (rpc_option).cs = true;
    message Req {
        string ActorID = 1;
    }
    message Rsp {
        ActorInfo ActorInfo = 1;
    }
}

message GetInfo {
    option (rpc_option).route_key = "";
    option (rpc_option).cs = true;
    message Req {
        string ActorID = 1;
    }
    message Rsp {
        string Name = 1;
        string Title = 2;
    }
}

message PostChannel {
    option (rpc_option).route_key = "";
    option (rpc_option).cs = true;
    message Req {
        string ActorID = 1;
        string Content = 2;
    }
    message Rsp {
        string Pass = 1;
    }
}

message PullChannel {
    option (rpc_option).route_key = "";
    option (rpc_option).cs = true;
    message Req {
        string ActorID = 1;
    }
    message Rsp {
        repeated ChannelMsg Msgs = 1;
    }
}